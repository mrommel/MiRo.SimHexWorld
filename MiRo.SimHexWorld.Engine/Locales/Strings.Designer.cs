//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.269
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MiRo.SimHexWorld.Engine.Locales {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MiRo.SimHexWorld.Engine.Locales.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MiRo.SimHexWorld ähnelt.
        /// </summary>
        internal static string Title {
            get {
                return ResourceManager.GetString("Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Monument increases the Culture of a city, speeding the growth of the city&apos;s territory and the civilization&apos;s acquisition of Social Policies. ähnelt.
        /// </summary>
        internal static string TXT_KEY_BUILDING_MONUMENT_DESCRIPTION {
            get {
                return ResourceManager.GetString("TXT_KEY_BUILDING_MONUMENT_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Monument ähnelt.
        /// </summary>
        internal static string TXT_KEY_BUILDING_MONUMENT_TITLE {
            get {
                return ResourceManager.GetString("TXT_KEY_BUILDING_MONUMENT_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zeigt an, dass diese Stadt die [ICON_CAPITAL] Hauptstadt des Reichs ist.[NEWLINE][NEWLINE]Durch das [ICON_CONNECTED] Verbinden anderer Städte mit der [ICON_CAPITAL] Hauptstadt wird zusätzliches [ICON_GOLD] Gold produziert.[NEWLINE][NEWLINE]+2 [ICON_PRODUCTION] Produktion, +3 [ICON_RESEARCH] Wissenschaft, +2 [ICON_GOLD] Gold ähnelt.
        /// </summary>
        internal static string TXT_KEY_BUILDING_PALACE_DESC {
            get {
                return ResourceManager.GetString("TXT_KEY_BUILDING_PALACE_DESC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Palast ähnelt.
        /// </summary>
        internal static string TXT_KEY_BUILDING_PALACE_TITLE {
            get {
                return ResourceManager.GetString("TXT_KEY_BUILDING_PALACE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duel auf der Erde ähnelt.
        /// </summary>
        internal static string TXT_KEY_MAP_EARTH_TITLE_EARTH_DUEL {
            get {
                return ResourceManager.GetString("TXT_KEY_MAP_EARTH_TITLE_EARTH_DUEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Riesige Erde ähnelt.
        /// </summary>
        internal static string TXT_KEY_MAP_EARTH_TITLE_EARTH_HUGE {
            get {
                return ResourceManager.GetString("TXT_KEY_MAP_EARTH_TITLE_EARTH_HUGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Große Erde ähnelt.
        /// </summary>
        internal static string TXT_KEY_MAP_EARTH_TITLE_EARTH_LARGE {
            get {
                return ResourceManager.GetString("TXT_KEY_MAP_EARTH_TITLE_EARTH_LARGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Kleine Erde ähnelt.
        /// </summary>
        internal static string TXT_KEY_MAP_EARTH_TITLE_EARTH_SMALL {
            get {
                return ResourceManager.GetString("TXT_KEY_MAP_EARTH_TITLE_EARTH_SMALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Normale Erde ähnelt.
        /// </summary>
        internal static string TXT_KEY_MAP_EARTH_TITLE_EARTH_STANDARD {
            get {
                return ResourceManager.GetString("TXT_KEY_MAP_EARTH_TITLE_EARTH_STANDARD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Winzige Erde ähnelt.
        /// </summary>
        internal static string TXT_KEY_MAP_EARTH_TITLE_EARTH_TINY {
            get {
                return ResourceManager.GetString("TXT_KEY_MAP_EARTH_TITLE_EARTH_TINY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} hat {1} auf {2} gebaut ähnelt.
        /// </summary>
        internal static string TXT_KEY_NOTIFICATION_BUILD_IMPROVEMENT {
            get {
                return ResourceManager.GetString("TXT_KEY_NOTIFICATION_BUILD_IMPROVEMENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} hat Stadt {1} gegründet ähnelt.
        /// </summary>
        internal static string TXT_KEY_NOTIFICATION_FOUND_CITY {
            get {
                return ResourceManager.GetString("TXT_KEY_NOTIFICATION_FOUND_CITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Prüfung ähnelt.
        /// </summary>
        internal static string TXT_KEY_UI_MAINAPPLICATION_CHECK {
            get {
                return ResourceManager.GetString("TXT_KEY_UI_MAINAPPLICATION_CHECK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Beenden ähnelt.
        /// </summary>
        internal static string TXT_KEY_UI_MAINAPPLICATION_EXIT {
            get {
                return ResourceManager.GetString("TXT_KEY_UI_MAINAPPLICATION_EXIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Laden ähnelt.
        /// </summary>
        internal static string TXT_KEY_UI_MAINAPPLICATION_LOAD {
            get {
                return ResourceManager.GetString("TXT_KEY_UI_MAINAPPLICATION_LOAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start ähnelt.
        /// </summary>
        internal static string TXT_KEY_UI_MAINAPPLICATION_START {
            get {
                return ResourceManager.GetString("TXT_KEY_UI_MAINAPPLICATION_START", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zug ähnelt.
        /// </summary>
        internal static string TXT_KEY_UI_MAINAPPLICATION_TURN {
            get {
                return ResourceManager.GetString("TXT_KEY_UI_MAINAPPLICATION_TURN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zug: {0}, {1} ähnelt.
        /// </summary>
        internal static string TXT_KEY_UI_MAINAPPLICATION_TURN_PATTERN {
            get {
                return ResourceManager.GetString("TXT_KEY_UI_MAINAPPLICATION_TURN_PATTERN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gründet neue Städte für Ihr Reich.
        ///[Food] Nahrungswachstum der Stadt ist angehalten solange er gebaut wird. ähnelt.
        /// </summary>
        internal static string TXT_KEY_UNITS_SETTLER_DESCRIPTION {
            get {
                return ResourceManager.GetString("TXT_KEY_UNITS_SETTLER_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pioneers drive civilization. While most are satisfied with the status quo, happy just to survive, in every culture there are a few hardy individuals willing to strike out on their own, to risk everything in the hope of finding a better life for themselves and their children. In the past, brave settlers have led humanity out of Africa and into Europe, Asia, the Pacific, and the Americas. In the future they may lead the way to the moon, Mars, and even beyond. ähnelt.
        /// </summary>
        internal static string TXT_KEY_UNITS_SETTLER_HISTORICAL {
            get {
                return ResourceManager.GetString("TXT_KEY_UNITS_SETTLER_HISTORICAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use this unit to construct new cities. It cannot defend itself, so accompany it with a combat unit. ähnelt.
        /// </summary>
        internal static string TXT_KEY_UNITS_SETTLER_STRATEGY {
            get {
                return ResourceManager.GetString("TXT_KEY_UNITS_SETTLER_STRATEGY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Siedler ähnelt.
        /// </summary>
        internal static string TXT_KEY_UNITS_SETTLER_TITLE {
            get {
                return ResourceManager.GetString("TXT_KEY_UNITS_SETTLER_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Krieger ähnelt.
        /// </summary>
        internal static string TXT_KEY_UNITS_WARRIOR_TITLE {
            get {
                return ResourceManager.GetString("TXT_KEY_UNITS_WARRIOR_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Verbessert [Food] Nahrung[Production] Produktion und [Gold] Gold durch die Errichtung von Verbesserungen auf der Karte bei Städten. ähnelt.
        /// </summary>
        internal static string TXT_KEY_UNITS_WORKER_DESCRIPTION {
            get {
                return ResourceManager.GetString("TXT_KEY_UNITS_WORKER_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Arbeiter ähnelt.
        /// </summary>
        internal static string TXT_KEY_UNITS_WORKER_TITLE {
            get {
                return ResourceManager.GetString("TXT_KEY_UNITS_WORKER_TITLE", resourceCulture);
            }
        }
    }
}
