//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.269
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MiRo.SimHexWorld.Engine.Locales {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MiRo.SimHexWorld.Engine.Locales.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MiRo.SimHexWorld ähnelt.
        /// </summary>
        internal static string Title {
            get {
                return ResourceManager.GetString("Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Walls increase a city&apos;s Defense Strength, making the city more difficult to capture. Walls are quite useful for cities located along a civilization&apos;s frontier. ähnelt.
        /// </summary>
        internal static string TXT_KEY_BUILDINGS_WALLS_DESCRIPTION {
            get {
                return ResourceManager.GetString("TXT_KEY_BUILDINGS_WALLS_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Walls ähnelt.
        /// </summary>
        internal static string TXT_KEY_BUILDINGS_WALLS_TITLE {
            get {
                return ResourceManager.GetString("TXT_KEY_BUILDINGS_WALLS_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cologne ähnelt.
        /// </summary>
        internal static string TXT_KEY_GERMAN_CITIES_COLOGNE {
            get {
                return ResourceManager.GetString("TXT_KEY_GERMAN_CITIES_COLOGNE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Munich ähnelt.
        /// </summary>
        internal static string TXT_KEY_GERMAN_CITIES_MUNICH {
            get {
                return ResourceManager.GetString("TXT_KEY_GERMAN_CITIES_MUNICH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 2 players with 4 City States. ähnelt.
        /// </summary>
        internal static string TXT_KEY_MAP_EARTH_HELP_EARTH_DUEL {
            get {
                return ResourceManager.GetString("TXT_KEY_MAP_EARTH_HELP_EARTH_DUEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 12 players with 24 City States. ähnelt.
        /// </summary>
        internal static string TXT_KEY_MAP_EARTH_HELP_EARTH_HUGE {
            get {
                return ResourceManager.GetString("TXT_KEY_MAP_EARTH_HELP_EARTH_HUGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 10 players with 20 City States. ähnelt.
        /// </summary>
        internal static string TXT_KEY_MAP_EARTH_HELP_EARTH_LARGE {
            get {
                return ResourceManager.GetString("TXT_KEY_MAP_EARTH_HELP_EARTH_LARGE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 6 players with 12 City States. ähnelt.
        /// </summary>
        internal static string TXT_KEY_MAP_EARTH_HELP_EARTH_SMALL {
            get {
                return ResourceManager.GetString("TXT_KEY_MAP_EARTH_HELP_EARTH_SMALL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 8 players with 16 City States. ähnelt.
        /// </summary>
        internal static string TXT_KEY_MAP_EARTH_HELP_EARTH_STANDARD {
            get {
                return ResourceManager.GetString("TXT_KEY_MAP_EARTH_HELP_EARTH_STANDARD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 4 players with 8 City States. ähnelt.
        /// </summary>
        internal static string TXT_KEY_MAP_EARTH_HELP_EARTH_TINY {
            get {
                return ResourceManager.GetString("TXT_KEY_MAP_EARTH_HELP_EARTH_TINY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} has constructed a {1} on {2} ähnelt.
        /// </summary>
        internal static string TXT_KEY_NOTIFICATION_BUILD_IMPROVEMENT {
            get {
                return ResourceManager.GetString("TXT_KEY_NOTIFICATION_BUILD_IMPROVEMENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} of {1} has constructed {2} ähnelt.
        /// </summary>
        internal static string TXT_KEY_NOTIFICATION_CITY_BUILDING {
            get {
                return ResourceManager.GetString("TXT_KEY_NOTIFICATION_CITY_BUILDING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} of {1} declined to {2} citizen ähnelt.
        /// </summary>
        internal static string TXT_KEY_NOTIFICATION_CITY_DECLINE {
            get {
                return ResourceManager.GetString("TXT_KEY_NOTIFICATION_CITY_DECLINE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} of {1} grew to {2} citizen ähnelt.
        /// </summary>
        internal static string TXT_KEY_NOTIFICATION_CITY_GREW {
            get {
                return ResourceManager.GetString("TXT_KEY_NOTIFICATION_CITY_GREW", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} of {1} has created a unit {2} ähnelt.
        /// </summary>
        internal static string TXT_KEY_NOTIFICATION_CITY_UNIT {
            get {
                return ResourceManager.GetString("TXT_KEY_NOTIFICATION_CITY_UNIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} has found {1} ähnelt.
        /// </summary>
        internal static string TXT_KEY_NOTIFICATION_FOUND_CITY {
            get {
                return ResourceManager.GetString("TXT_KEY_NOTIFICATION_FOUND_CITY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} has discovered {1} ähnelt.
        /// </summary>
        internal static string TXT_KEY_NOTIFICATION_SCIENCE_DISCOVERED {
            get {
                return ResourceManager.GetString("TXT_KEY_NOTIFICATION_SCIENCE_DISCOVERED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a social policy ähnelt.
        /// </summary>
        internal static string TXT_KEY_NOTIFICATION_SELECT_POLICY {
            get {
                return ResourceManager.GetString("TXT_KEY_NOTIFICATION_SELECT_POLICY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Citizenship ähnelt.
        /// </summary>
        internal static string TXT_KEY_POLICY_CITIZENSHIP_TITLE {
            get {
                return ResourceManager.GetString("TXT_KEY_POLICY_CITIZENSHIP_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Autocracy ähnelt.
        /// </summary>
        internal static string TXT_KEY_POLICY_TYPE_AUTOCRACY_TITLE {
            get {
                return ResourceManager.GetString("TXT_KEY_POLICY_TYPE_AUTOCRACY_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Honor ähnelt.
        /// </summary>
        internal static string TXT_KEY_POLICY_TYPE_HONOR_TITLE {
            get {
                return ResourceManager.GetString("TXT_KEY_POLICY_TYPE_HONOR_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Liberty ähnelt.
        /// </summary>
        internal static string TXT_KEY_POLICY_TYPE_LIBERTY_TITLE {
            get {
                return ResourceManager.GetString("TXT_KEY_POLICY_TYPE_LIBERTY_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Order ähnelt.
        /// </summary>
        internal static string TXT_KEY_POLICY_TYPE_ORDER_TITLE {
            get {
                return ResourceManager.GetString("TXT_KEY_POLICY_TYPE_ORDER_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Patronage ähnelt.
        /// </summary>
        internal static string TXT_KEY_POLICY_TYPE_PATRONAGE_TITLE {
            get {
                return ResourceManager.GetString("TXT_KEY_POLICY_TYPE_PATRONAGE_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Piety ähnelt.
        /// </summary>
        internal static string TXT_KEY_POLICY_TYPE_PIETY_TITLE {
            get {
                return ResourceManager.GetString("TXT_KEY_POLICY_TYPE_PIETY_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tradition ähnelt.
        /// </summary>
        internal static string TXT_KEY_POLICY_TYPE_TRADITION_TITLE {
            get {
                return ResourceManager.GetString("TXT_KEY_POLICY_TYPE_TRADITION_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You ähnelt.
        /// </summary>
        internal static string TXT_KEY_SATURATE {
            get {
                return ResourceManager.GetString("TXT_KEY_SATURATE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Agriculture ähnelt.
        /// </summary>
        internal static string TXT_KEY_TECH_AGRICULTURE {
            get {
                return ResourceManager.GetString("TXT_KEY_TECH_AGRICULTURE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Return to Map ähnelt.
        /// </summary>
        internal static string TXT_KEY_UI_CITY_EXIT {
            get {
                return ResourceManager.GetString("TXT_KEY_UI_CITY_EXIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Buildings ähnelt.
        /// </summary>
        internal static string TXT_KEY_UI_CITYVIEW_BUILDINGS {
            get {
                return ResourceManager.GetString("TXT_KEY_UI_CITYVIEW_BUILDINGS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die - Building ähnelt.
        /// </summary>
        internal static string TXT_KEY_UI_CITYVIEW_BUILDINGS_COLLAPSE {
            get {
                return ResourceManager.GetString("TXT_KEY_UI_CITYVIEW_BUILDINGS_COLLAPSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die + Building ähnelt.
        /// </summary>
        internal static string TXT_KEY_UI_CITYVIEW_BUILDINGS_EXPAND {
            get {
                return ResourceManager.GetString("TXT_KEY_UI_CITYVIEW_BUILDINGS_EXPAND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Return to map ähnelt.
        /// </summary>
        internal static string TXT_KEY_UI_CITYVIEW_RETURN_MAP {
            get {
                return ResourceManager.GetString("TXT_KEY_UI_CITYVIEW_RETURN_MAP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check ähnelt.
        /// </summary>
        internal static string TXT_KEY_UI_MAINAPPLICATION_CHECK {
            get {
                return ResourceManager.GetString("TXT_KEY_UI_MAINAPPLICATION_CHECK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exit ähnelt.
        /// </summary>
        internal static string TXT_KEY_UI_MAINAPPLICATION_EXIT {
            get {
                return ResourceManager.GetString("TXT_KEY_UI_MAINAPPLICATION_EXIT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Load ähnelt.
        /// </summary>
        internal static string TXT_KEY_UI_MAINAPPLICATION_LOAD {
            get {
                return ResourceManager.GetString("TXT_KEY_UI_MAINAPPLICATION_LOAD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start ähnelt.
        /// </summary>
        internal static string TXT_KEY_UI_MAINAPPLICATION_START {
            get {
                return ResourceManager.GetString("TXT_KEY_UI_MAINAPPLICATION_START", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Turn ähnelt.
        /// </summary>
        internal static string TXT_KEY_UI_MAINAPPLICATION_TURN {
            get {
                return ResourceManager.GetString("TXT_KEY_UI_MAINAPPLICATION_TURN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Turn: {0}, {1} ähnelt.
        /// </summary>
        internal static string TXT_KEY_UI_MAINAPPLICATION_TURN_PATTERN {
            get {
                return ResourceManager.GetString("TXT_KEY_UI_MAINAPPLICATION_TURN_PATTERN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New Era ähnelt.
        /// </summary>
        internal static string TXT_KEY_UI_NEWERA_TITLE {
            get {
                return ResourceManager.GetString("TXT_KEY_UI_NEWERA_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New era ähnelt.
        /// </summary>
        internal static string TXT_KEY_UI_NEWERA_WELCOME {
            get {
                return ResourceManager.GetString("TXT_KEY_UI_NEWERA_WELCOME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Founds new Cities to expand your empire.
        ///[Food] Growth of the City is stopped while this Unit is being built. ähnelt.
        /// </summary>
        internal static string TXT_KEY_UNITS_SETTLER_DESCRIPTION {
            get {
                return ResourceManager.GetString("TXT_KEY_UNITS_SETTLER_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pioneers drive civilization. While most are satisfied with the status quo, happy just to survive, in every culture there are a few hardy individuals willing to strike out on their own, to risk everything in the hope of finding a better life for themselves and their children. In the past, brave settlers have led humanity out of Africa and into Europe, Asia, the Pacific, and the Americas. In the future they may lead the way to the moon, Mars, and even beyond. ähnelt.
        /// </summary>
        internal static string TXT_KEY_UNITS_SETTLER_HISTORICAL {
            get {
                return ResourceManager.GetString("TXT_KEY_UNITS_SETTLER_HISTORICAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use this unit to construct new cities. It cannot defend itself, so accompany it with a combat unit. ähnelt.
        /// </summary>
        internal static string TXT_KEY_UNITS_SETTLER_STRATEGY {
            get {
                return ResourceManager.GetString("TXT_KEY_UNITS_SETTLER_STRATEGY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settler ähnelt.
        /// </summary>
        internal static string TXT_KEY_UNITS_SETTLER_TITLE {
            get {
                return ResourceManager.GetString("TXT_KEY_UNITS_SETTLER_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warrior ähnelt.
        /// </summary>
        internal static string TXT_KEY_UNITS_WARRIOR_TITLE {
            get {
                return ResourceManager.GetString("TXT_KEY_UNITS_WARRIOR_TITLE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Improves [Food] Food [Production] Production and [Gold] Gold by constructing Improvements on map tiles outside of Cities. ähnelt.
        /// </summary>
        internal static string TXT_KEY_UNITS_WORKER_DESCRIPTION {
            get {
                return ResourceManager.GetString("TXT_KEY_UNITS_WORKER_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Worker ähnelt.
        /// </summary>
        internal static string TXT_KEY_UNITS_WORKER_TITLE {
            get {
                return ResourceManager.GetString("TXT_KEY_UNITS_WORKER_TITLE", resourceCulture);
            }
        }
    }
}
